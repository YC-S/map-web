{"ast":null,"code":"var _jsxFileName = \"/Users/shiyuanchen/Downloads/map-web-master/src/components/search-bar.js\";\nimport React from 'react';\nimport { Icon, Input, AutoComplete } from 'antd';\nconst Option = AutoComplete.Option;\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource: []\n    };\n\n    this.onSelect = value => {\n      console.log('onSelect', value);\n    };\n  }\n\n  render() {\n    const dataSource = ['Seattle', 'San Francisco', 'New York'];\n    return React.createElement(\"div\", {\n      className: \"search-bar-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(AutoComplete, {\n      className: \"search-bar\",\n      dropdownClassName: \"search-bar-dropdown\",\n      dropdownMatchSelectWidth: false,\n      dropdownStyle: {\n        width: 300\n      },\n      onSelect: this.onSelect,\n      size: \"large\",\n      style: {\n        width: '100%'\n      },\n      dataSource: dataSource,\n      placeholder: \"Location\",\n      filterOption: (inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n      optionLabelProp: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Input, {\n      suffix: React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/shiyuanchen/Downloads/map-web-master/src/components/search-bar.js"],"names":["React","Icon","Input","AutoComplete","Option","SearchBar","Component","state","dataSource","onSelect","value","console","log","render","width","inputValue","option","props","children","toUpperCase","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,QAA0C,MAA1C;MACQC,M,GAAWD,Y,CAAXC,M;;AAIR,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,UAAU,EAAE;AADR,KAD4B;;AAAA,SAKpCC,QALoC,GAKxBC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACH,KAPmC;AAAA;;AAWpCG,EAAAA,MAAM,GAAG;AACL,UAAML,UAAU,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,CAAnB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,iBAAiB,EAAC,qBAFtB;AAGI,MAAA,wBAAwB,EAAE,KAH9B;AAII,MAAA,aAAa,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAJnB;AAKI,MAAA,QAAQ,EAAE,KAAKL,QALnB;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAPX;AAQI,MAAA,UAAU,EAAEN,UARhB;AASI,MAAA,WAAW,EAAC,UAThB;AAUI,MAAA,YAAY,EAAE,CAACO,UAAD,EAAaC,MAAb,KACVA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CL,UAAU,CAACI,WAAX,EAA5C,MAA0E,CAAC,CAXnF;AAaI,MAAA,eAAe,EAAC,OAbpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ,CADJ;AAqBH;;AAlCmC;;AAqCxC,eAAed,SAAf","sourcesContent":["import React from 'react';\nimport { Icon, Input, AutoComplete } from 'antd';\nconst { Option } = AutoComplete;\n\n\n\nclass SearchBar extends React.Component {\n    state = {\n        dataSource: [],\n    };\n\n    onSelect = (value) => {\n        console.log('onSelect', value);\n    }\n\n\n\n    render() {\n        const dataSource = ['Seattle', 'San Francisco', 'New York'];\n        return (\n            <div className=\"search-bar-wrapper\" >\n                <AutoComplete\n                    className=\"search-bar\"\n                    dropdownClassName=\"search-bar-dropdown\"\n                    dropdownMatchSelectWidth={false}\n                    dropdownStyle={{ width: 300 }}\n                    onSelect={this.onSelect}\n                    size=\"large\"\n                    style={{ width: '100%' }}\n                    dataSource={dataSource}\n                    placeholder=\"Location\"\n                    filterOption={(inputValue, option) =>\n                        option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                    }\n                    optionLabelProp=\"value\"\n                >\n                    <Input suffix={<Icon type=\"search\" />} />\n                </AutoComplete>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}