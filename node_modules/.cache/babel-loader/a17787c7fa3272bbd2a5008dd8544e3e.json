{"ast":null,"code":"var _jsxFileName = \"/Users/shiyuanchen/Downloads/map-web-master/src/components/search-bar.js\";\nimport React from 'react';\nimport { Icon, Input, AutoComplete } from 'antd';\nconst Option = AutoComplete.Option;\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource: []\n    };\n\n    this.onSelect = value => {\n      console.log('onSelect', value);\n    };\n  }\n\n  render() {\n    const dataSource = ['Seattle', 'San Francisco', 'New York', 'Chicago', 'Austin', 'Pittsburgh'];\n    return React.createElement(\"div\", {\n      className: \"search-bar-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(AutoComplete, {\n      className: \"search-bar\",\n      dropdownClassName: \"search-bar-dropdown\",\n      dropdownMatchSelectWidth: false,\n      dropdownStyle: {\n        width: 300\n      },\n      onSelect: this.onSelect,\n      size: \"large\",\n      style: {\n        width: '100%'\n      },\n      dataSource: dataSource,\n      placeholder: \"Location\",\n      filterOption: (inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n      optionLabelProp: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Input, {\n      suffix: React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/shiyuanchen/Downloads/map-web-master/src/components/search-bar.js"],"names":["React","Icon","Input","AutoComplete","Option","SearchBar","Component","state","dataSource","onSelect","value","console","log","render","width","inputValue","option","props","children","toUpperCase","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,YAArB,QAAwC,MAAxC;MAEOC,M,GAAUD,Y,CAAVC,M;;AAGP,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,UAAU,EAAE;AADN,KAD8B;;AAAA,SAKtCC,QALsC,GAK1BC,KAAD,IAAW;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACD,KAPqC;AAAA;;AAUtCG,EAAAA,MAAM,GAAG;AACP,UAAML,UAAU,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,EAAyC,SAAzC,EAAoD,QAApD,EAA8D,YAA9D,CAAnB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,iBAAiB,EAAC,qBAFpB;AAGE,MAAA,wBAAwB,EAAE,KAH5B;AAIE,MAAA,aAAa,EAAE;AAACM,QAAAA,KAAK,EAAE;AAAR,OAJjB;AAKE,MAAA,QAAQ,EAAE,KAAKL,QALjB;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,KAAK,EAAE;AAACK,QAAAA,KAAK,EAAE;AAAR,OAPT;AAQE,MAAA,UAAU,EAAEN,UARd;AASE,MAAA,WAAW,EAAC,UATd;AAUE,MAAA,YAAY,EAAE,CAACO,UAAD,EAAaC,MAAb,KACZA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CL,UAAU,CAACI,WAAX,EAA5C,MAA0E,CAAC,CAX/E;AAaE,MAAA,eAAe,EAAC,OAblB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF,CADF;AAqBD;;AAjCqC;;AAoCxC,eAAed,SAAf","sourcesContent":["import React from 'react';\nimport {Icon, Input, AutoComplete} from 'antd';\n\nconst {Option} = AutoComplete;\n\n\nclass SearchBar extends React.Component {\n  state = {\n    dataSource: [],\n  };\n\n  onSelect = (value) => {\n    console.log('onSelect', value);\n  }\n\n\n  render() {\n    const dataSource = ['Seattle', 'San Francisco', 'New York', 'Chicago', 'Austin', 'Pittsburgh'];\n    return (\n      <div className=\"search-bar-wrapper\">\n        <AutoComplete\n          className=\"search-bar\"\n          dropdownClassName=\"search-bar-dropdown\"\n          dropdownMatchSelectWidth={false}\n          dropdownStyle={{width: 300}}\n          onSelect={this.onSelect}\n          size=\"large\"\n          style={{width: '100%'}}\n          dataSource={dataSource}\n          placeholder=\"Location\"\n          filterOption={(inputValue, option) =>\n            option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n          optionLabelProp=\"value\"\n        >\n          <Input suffix={<Icon type=\"search\"/>}/>\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}